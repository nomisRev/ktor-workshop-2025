[versions]
kotlin = "2.1.21"
ktor = "3.2.0-eap-1322"
logback = "1.4.14"
exposed = "1.0.0-beta-1"
hikari = "6.2.1"
postgresql = "42.7.1"
testcontainers = "1.19.3"
kotlinx-datetime = "0.5.0"
langchain4j = "1.0.0-beta2"
flyway = "11.8.0"
micrometer = "1.12.2"
androidx-lifecycle = "2.8.4"
compose-multiplatform = "1.7.3"
kotlinx-coroutines = "1.9.0"
langchain4j-kotlin = "0.1.8"
h2database = "1.0.0.RELEASE"

[libraries]
kotlinx-coroutines = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "kotlinx-coroutines" }

kotlinx-datetime = { module = "org.jetbrains.kotlinx:kotlinx-datetime", version.ref = "kotlinx-datetime" }

langchain4j = { module = "dev.langchain4j:langchain4j", version.ref = "langchain4j" }
langchain4j-embeddings = { module = "dev.langchain4j:langchain4j-embeddings-all-minilm-l6-v2-q", version.ref = "langchain4j" }
langchain4j-openai = { module = "dev.langchain4j:langchain4j-open-ai", version.ref = "langchain4j" }
langchain4j-ollama = { module = "dev.langchain4j:langchain4j-ollama", version.ref = "langchain4j" }
langchain4j-pdf = { module = "dev.langchain4j:langchain4j-document-parser-apache-pdfbox", version.ref = "langchain4j" }
lanchain4j-kotlin = { module = "me.kpavlov.langchain4j.kotlin:langchain4j-kotlin", version.ref = "langchain4j-kotlin" }

ktor-client-content-negotiation = { module = "io.ktor:ktor-client-content-negotiation", version.ref = "ktor" }
ktor-client-cio = { module = "io.ktor:ktor-client-cio", version.ref = "ktor" }
ktor-client-websockets = { module = "io.ktor:ktor-client-websockets", version.ref = "ktor" }
ktor-client-apache = { module = "io.ktor:ktor-client-apache", version.ref = "ktor" }

ktor-server-netty = { module = "io.ktor:ktor-server-netty", version.ref = "ktor" }
ktor-server-content-negotiation = { module = "io.ktor:ktor-server-content-negotiation", version.ref = "ktor" }
ktor-server-websockets = { module = "io.ktor:ktor-server-websockets", version.ref = "ktor" }
ktor-server-sse = { module = "io.ktor:ktor-server-sse", version.ref = "ktor" }
ktor-server-call-logging = { module = "io.ktor:ktor-server-call-logging", version.ref = "ktor" }
ktor-server-default-headers = { module = "io.ktor:ktor-server-default-headers", version.ref = "ktor" }
ktor-server-sessions = { module = "io.ktor:ktor-server-sessions", version.ref = "ktor" }
ktor-kotlinx-json = { module = "io.ktor:ktor-serialization-kotlinx-json", version.ref = "ktor" }
ktor-server-auth-jwt = { module = "io.ktor:ktor-server-auth-jwt", version.ref = "ktor" }
ktor-server-config-yaml = { module = "io.ktor:ktor-server-config-yaml", version.ref = "ktor" }
ktor-server-test-host = { module = "io.ktor:ktor-server-test-host", version.ref = "ktor" }
ktor-server-metrics-micrometer = { module = "io.ktor:ktor-server-metrics-micrometer", version.ref = "ktor" }
ktor-server-cors = { module = "io.ktor:ktor-server-cors", version.ref = "ktor" }
ktor-server-di = { module = "io.ktor:ktor-server-di", version.ref = "ktor" }
micrometer-registry-prometheus = { module = "io.micrometer:micrometer-registry-prometheus", version.ref = "micrometer" }

logback-classic = { module = "ch.qos.logback:logback-classic", version.ref = "logback" }

exposed-r2dbc = { module = "org.jetbrains.exposed:exposed-r2dbc", version.ref = "exposed" }
exposed-kotlin-datetime = { module = "org.jetbrains.exposed:exposed-kotlin-datetime", version.ref = "exposed" }
hikari = { module = "com.zaxxer:HikariCP", version.ref = "hikari" }
postgresql = { module = "org.postgresql:postgresql", version.ref = "postgresql" }
flyway-core = { module = "org.flywaydb:flyway-core", version.ref = "flyway" }
flyway-postgresql = { module = "org.flywaydb:flyway-database-postgresql", version.ref = "flyway" }
h2database = { module = "io.r2dbc:r2dbc-h2", version.ref = "h2database" }

kotlin-test-junit = { module = "org.jetbrains.kotlin:kotlin-test-junit", version.ref = "kotlin" }

testcontainers-core = { module = "org.testcontainers:testcontainers", version.ref = "testcontainers" }
testcontainers-junit = { module = "org.testcontainers:junit-jupiter", version.ref = "testcontainers" }
testcontainers-postgresql = { module = "org.testcontainers:postgresql", version.ref = "testcontainers" }

androidx-lifecycle-viewmodel = { group = "org.jetbrains.androidx.lifecycle", name = "lifecycle-viewmodel", version.ref = "androidx-lifecycle" }
androidx-lifecycle-runtime-compose = { group = "org.jetbrains.androidx.lifecycle", name = "lifecycle-runtime-compose", version.ref = "androidx-lifecycle" }

[bundles]
exposed = [
    "exposed-r2dbc",
    "exposed-kotlin-datetime",
    "hikari",
    "h2database"
]
flyway = ["flyway-core", "flyway-postgresql"]
ktor-client = [
    "ktor-client-content-negotiation",
    "ktor-client-cio",
    "ktor-kotlinx-json"
]
langchain4j = [
    "langchain4j",
    "langchain4j-embeddings",
    "langchain4j-openai",
    "langchain4j-ollama",
    "langchain4j-pdf",
    "lanchain4j-kotlin"
]
ktor-server = [
    "ktor-server-netty",
    "ktor-server-content-negotiation",
    "ktor-server-config-yaml",
    "ktor-server-auth-jwt",
    "ktor-kotlinx-json",
    "ktor-server-metrics-micrometer",
    "ktor-server-websockets",
    "ktor-server-call-logging",
    "ktor-server-default-headers",
    "ktor-server-sessions",
    "ktor-server-sse",
    "ktor-server-cors",
    "ktor-server-di"
]
testing = [
    "ktor-server-test-host",
    "kotlin-test-junit",
    "testcontainers-core",
    "testcontainers-junit",
    "testcontainers-postgresql"
]

[plugins]
kotlin-jvm = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }
kotlin-multiplatform = { id = "org.jetbrains.kotlin.multiplatform", version.ref = "kotlin" }
compose-multiplatform = { id = "org.jetbrains.compose", version.ref = "compose-multiplatform" }
compose-compiler = { id = "org.jetbrains.kotlin.plugin.compose", version.ref = "kotlin" }
ktor = { id = "io.ktor.plugin", version = "3.1.1" }
kotlin-serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
kotlin-assert = { id = "org.jetbrains.kotlin.plugin.power-assert", version.ref = "kotlin" }
